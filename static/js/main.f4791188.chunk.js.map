{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","fetchMovieByTitle","title","endpoint","fetch","then","response","json","FindMovie","addMovie","useState","query","setQuery","setTitle","error","setError","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","state","film","some","setState","prev","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+UAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,OCRRC,EAAoB,SAACC,GAAD,OALNC,EAKoC,MAAD,OAAOD,GAJ5DE,MAAM,GAAD,OAHG,4CAGH,OAAeD,IACxBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFL,IAACJ,GCOdK,G,MAA8B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5C,EAA0BC,mBAAuB,MAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOR,EAAP,KAAcW,EAAd,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAmCA,OACE,qCACE,uBACExB,UAAU,aACVyB,SA3Be,SAACC,GACpBA,EAAMC,iBAEFP,GACFF,EAASE,GARXE,EAAS,IACTD,EAAS,OAUPG,GAAS,IAkBT,UAIE,sBAAKxB,UAAU,QAAf,UAEE,uBAAOA,UAAU,QAAQ4B,QAAQ,cAAjC,yBAIA,qBAAK5B,UAAU,UAAf,SACE,uBACE6B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ/B,UAAU,QACVgC,MAAOrB,EACPsB,SApDS,SAACP,GACpBJ,EAASI,EAAMQ,OAAOF,OACtBR,GAAS,QAsDFD,GACC,mBAAGvB,UAAU,iBAAb,qDAOJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SAEE,wBACE6B,KAAK,SACL7B,UAAU,kBACVmC,QAjDM,WAChBzB,EAAkBC,GACfG,MAAK,SAAAf,GACCA,EAAMY,OAGTa,GAAS,GACTH,EAAS,OAHTA,EAAStB,OA0CP,4BAUF,qBAAKC,UAAU,UAAf,SAEE,wBACEA,UAAU,oBACV6B,KAAK,SAFP,qCAWN,sBAAK7B,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCoB,GACC,cAAC,EAAD,CAAWrB,MAAOqB,YClGfgB,G,MAAb,4MACEC,MAAe,CACb9B,OAAQ,IAFZ,EAKEW,SAAW,SAACoB,GACS,EAAKD,MAAM9B,OAAOgC,MACnC,SAAAxC,GAAK,OAAIA,EAAMU,SAAW6B,EAAK7B,WAI/B,EAAK+B,UAAS,SAAAC,GAAI,MAAK,CACrBlC,OAAO,CAAE+B,GAAH,mBAAYG,EAAKlC,cAZ/B,4CAiBE,WACE,IAAQA,EAAWmC,KAAKL,MAAhB9B,OAER,OACE,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWkB,SAAUwB,KAAKxB,oBA1BpC,GAAyByB,cCLzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f4791188.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=f26a7b2d';\n\nexport const fetchMovie = (endpoint: string) => {\n  return fetch(`${BASE_URL}${endpoint}`)\n    .then(response => response.json());\n};\n\nexport const fetchMovieByTitle = (title: string) => fetchMovie(`&t=${title}`);\n","import React, { useState } from 'react';\nimport { fetchMovieByTitle } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie :(film: Movie) => void,\n};\n\nexport const FindMovie: React.FC <Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setQuery(null);\n  };\n\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (query) {\n      addMovie(query);\n      reset();\n    } else {\n      setError(true);\n    }\n  };\n\n  const findMovie = () => {\n    fetchMovieByTitle(title)\n      .then(movie => {\n        if (!movie.title) {\n          setQuery(movie);\n        } else {\n          setError(true);\n          setQuery(null);\n        }\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n\n          </div>\n\n          <div className=\"control\">\n\n            <button\n              className=\"button is-primary\"\n              type=\"submit\"\n            >\n              Add to the list\n            </button>\n\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {query && (\n          <MovieCard movie={query} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport './App.scss';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addMovie = (film: Movie) => {\n    const foundMovie = this.state.movies.some(\n      movie => movie.imdbID === film.imdbID,\n    );\n\n    if (!foundMovie) {\n      this.setState(prev => ({\n        movies: [film, ...prev.movies],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}